_program
_program -> main ( ) { _instruction_list }

_instruction_list -> _instruction _instruction_list_p
_instruction_list_p -> _instruction_list
_instruction_list_p -> eps

_instruction -> _declaration ;
_instruction -> _assignment ;
_instruction -> _io ;
_instruction -> _control
_instruction -> _loop

_declaration -> _type _identifier _declaration_p
_declaration_p -> eps
_declaration_p -> = _expression

_type -> int
_type -> float

_assignment -> _identifier = _expression

_expression -> _term _expression_p
_expression_p -> + _term _expression_p
_expression_p -> - _term _expression_p
_expression_p -> eps

_term -> _factor _term_p
_term_p -> * _factor _term_p
_term_p -> / _factor _term_p
_term_p -> % _factor _term_p
_term_p -> eps

_factor -> _identifier
_factor -> _numeric_constant
_factor -> ( _expression )

_io -> _input
_io -> _output

_input -> cin >> _identifier

_output -> cout << _output_p
_output_p -> _expression
_output_p -> _string_constant

_control -> if ( _logical_expression ) { _instruction_list } _control_p
_control_p -> else { _instruction_list }
_control_p -> eps

_loop -> while ( _logical_expression ) { _instruction_list }

_logical_expression -> _expression _logical_expression_p
_logical_expression_p -> _relational_operator _expression _logical_expression_s
_logical_expression_p -> eps
_logical_expression_s -> _logical_operator _logical_expression
_logical_expression_s -> eps

_logical_operator -> &&
_logical_operator -> ||

_relational_operator -> ==
_relational_operator -> !=
_relational_operator -> <=
_relational_operator -> <
_relational_operator -> >=
_relational_operator -> >

_identifier -> ID

_numeric_constant -> CONST

_string_constant -> STRING